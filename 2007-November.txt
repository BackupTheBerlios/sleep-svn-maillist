From rsmudge at mail.berlios.de  Fri Nov  9 01:52:15 2007
From: rsmudge at mail.berlios.de (rsmudge at BerliOS)
Date: Fri, 9 Nov 2007 01:52:15 +0100
Subject: [Sleep-svn] r311 - in sleep: . src/sleep/engine tests tests/output
Message-ID: <200711090052.lA90qFJp015302@sheep.berlios.de>

Author: rsmudge
Date: 2007-11-09 01:52:14 +0100 (Fri, 09 Nov 2007)
New Revision: 311

Added:
   sleep/tests/output/probug.sl
   sleep/tests/probug.sl
Modified:
   sleep/src/sleep/engine/CallRequest.java
   sleep/whatsnew.txt
Log:
..


Modified: sleep/src/sleep/engine/CallRequest.java
===================================================================
--- sleep/src/sleep/engine/CallRequest.java	2007-10-25 00:26:03 UTC (rev 310)
+++ sleep/src/sleep/engine/CallRequest.java	2007-11-09 00:52:14 UTC (rev 311)
@@ -64,10 +64,24 @@
       {
          if (e.getScriptInstance().isProfileOnly())
          {
-             long stat = System.currentTimeMillis();
-             temp = execute();
-             stat = System.currentTimeMillis() - stat;
-             e.getScriptInstance().collect(getFunctionName(), getLineNumber(), stat);
+             try
+             {
+                long stat = System.currentTimeMillis();
+                temp = execute();
+                stat = System.currentTimeMillis() - stat;
+                e.getScriptInstance().collect(getFunctionName(), getLineNumber(), stat);
+             }
+             catch (RuntimeException rex)
+             {
+                if (rex.getCause() == null || ! (  (java.lang.reflect.InvocationTargetException.class).isInstance(rex.getCause())  ))
+                {
+                   /* swallow invocation target exceptions please */
+
+                   e.cleanFrame(mark);
+                   e.KillFrame();
+                   throw(rex);
+                }
+             }
          }
          else
          {

Added: sleep/tests/output/probug.sl
===================================================================
--- sleep/tests/output/probug.sl	2007-10-25 00:26:03 UTC (rev 310)
+++ sleep/tests/output/probug.sl	2007-11-09 00:52:14 UTC (rev 311)
@@ -0,0 +1 @@
+Warning: checkError(): java.lang.IndexOutOfBoundsException: Index: 3, Size: 0 at probug.sl:10

Added: sleep/tests/probug.sl
===================================================================
--- sleep/tests/probug.sl	2007-10-25 00:26:03 UTC (rev 310)
+++ sleep/tests/probug.sl	2007-11-09 00:52:14 UTC (rev 311)
@@ -0,0 +1,10 @@
+#
+# bug with profiler only mode...
+#
+
+debug(7 | 24);
+
+global('$x');
+
+$x = [new java.util.LinkedList];
+[$x remove: 3];

Modified: sleep/whatsnew.txt
===================================================================
--- sleep/whatsnew.txt	2007-10-25 00:26:03 UTC (rev 310)
+++ sleep/whatsnew.txt	2007-11-09 00:52:14 UTC (rev 311)
@@ -1,3 +1,7 @@
+2.1-beta 20
+===========
+- fix debug mode 24 error handling inconsistency bug.
+
 2.1-beta 19  (24 Oct 07)
 ===========
 - sleep interpreter now performs better stack hygeine to prevent 



From rsmudge at mail.berlios.de  Fri Nov  9 02:52:24 2007
From: rsmudge at mail.berlios.de (rsmudge at BerliOS)
Date: Fri, 9 Nov 2007 02:52:24 +0100
Subject: [Sleep-svn] r312 - in sleep: . src/sleep/engine
Message-ID: <200711090152.lA91qOwx022079@sheep.berlios.de>

Author: rsmudge
Date: 2007-11-09 02:52:24 +0100 (Fri, 09 Nov 2007)
New Revision: 312

Modified:
   sleep/src/sleep/engine/ObjectUtilities.java
   sleep/whatsnew.txt
Log:
..


Modified: sleep/src/sleep/engine/ObjectUtilities.java
===================================================================
--- sleep/src/sleep/engine/ObjectUtilities.java	2007-11-09 00:52:14 UTC (rev 311)
+++ sleep/src/sleep/engine/ObjectUtilities.java	2007-11-09 01:52:24 UTC (rev 312)
@@ -353,7 +353,7 @@
    {
       if (type == String.class)
       {
-         return value.toString();
+         return SleepUtils.isEmptyScalar(value) ? null : value.toString();
       }
       else if (value.getArray() != null)
       {
@@ -369,7 +369,7 @@
                 Scalar temp = (Scalar)i.next();
                 Object blah = buildArgument(atype, temp, script);
 
-                if (blah != null && (atype.isInstance(blah) || atype.isPrimitive()))
+                if ((blah == null && !atype.isPrimitive()) || atype.isInstance(blah) || atype.isPrimitive())
                 {
                    Array.set(arrayV, x, blah);
                 }

Modified: sleep/whatsnew.txt
===================================================================
--- sleep/whatsnew.txt	2007-11-09 00:52:14 UTC (rev 311)
+++ sleep/whatsnew.txt	2007-11-09 01:52:24 UTC (rev 312)
@@ -1,6 +1,9 @@
 2.1-beta 20
 ===========
 - fix debug mode 24 error handling inconsistency bug.
+- $null passed as a Java string now evaluates to null and not ""
+- sleep arrays will now $null elements when converting to Java
+  arrays.
 
 2.1-beta 19  (24 Oct 07)
 ===========



From rsmudge at mail.berlios.de  Fri Nov  9 03:04:44 2007
From: rsmudge at mail.berlios.de (rsmudge at BerliOS)
Date: Fri, 9 Nov 2007 03:04:44 +0100
Subject: [Sleep-svn] r313 - in sleep: . src/sleep/bridges src/sleep/runtime
	tests tests/output
Message-ID: <200711090204.lA924iYh023936@sheep.berlios.de>

Author: rsmudge
Date: 2007-11-09 03:04:43 +0100 (Fri, 09 Nov 2007)
New Revision: 313

Added:
   sleep/tests/forkof.sl
   sleep/tests/output/forkof.sl
Modified:
   sleep/src/sleep/bridges/BasicIO.java
   sleep/src/sleep/runtime/ScriptInstance.java
   sleep/whatsnew.txt
Log:
..


Modified: sleep/src/sleep/bridges/BasicIO.java
===================================================================
--- sleep/src/sleep/bridges/BasicIO.java	2007-11-09 01:52:24 UTC (rev 312)
+++ sleep/src/sleep/bridges/BasicIO.java	2007-11-09 02:04:43 UTC (rev 313)
@@ -464,7 +464,7 @@
           
              child.getScriptVariables().putScalar("$source", SleepUtils.getScalar(child_io));
 
-             Thread temp = new Thread(child, child.getName());
+             Thread temp = new Thread(child, "fork of " + child.getRunnableBlock().getSourceLocation());
 
              parent_io.setThread(temp);
              child_io.setThread(temp);

Modified: sleep/src/sleep/runtime/ScriptInstance.java
===================================================================
--- sleep/src/sleep/runtime/ScriptInstance.java	2007-11-09 01:52:24 UTC (rev 312)
+++ sleep/src/sleep/runtime/ScriptInstance.java	2007-11-09 02:04:43 UTC (rev 313)
@@ -346,7 +346,7 @@
     public ScriptInstance fork()
     {
         ScriptInstance si = new ScriptInstance(variables.getGlobalVariables().createInternalVariableContainer(), environment.getEnvironment());
-        si.setName("fork of " + getName());
+        si.setName(getName());
         si.setDebugFlags(getDebugFlags());
         si.watchers = watchers;
  

Added: sleep/tests/forkof.sl
===================================================================
--- sleep/tests/forkof.sl	2007-11-09 01:52:24 UTC (rev 312)
+++ sleep/tests/forkof.sl	2007-11-09 02:04:43 UTC (rev 313)
@@ -0,0 +1,7 @@
+#
+# 
+#
+
+fork({
+  println([Thread currentThread]);
+});

Added: sleep/tests/output/forkof.sl
===================================================================
--- sleep/tests/output/forkof.sl	2007-11-09 01:52:24 UTC (rev 312)
+++ sleep/tests/output/forkof.sl	2007-11-09 02:04:43 UTC (rev 313)
@@ -0,0 +1 @@
+Thread[fork of forkof.sl:6,5,main]

Modified: sleep/whatsnew.txt
===================================================================
--- sleep/whatsnew.txt	2007-11-09 01:52:24 UTC (rev 312)
+++ sleep/whatsnew.txt	2007-11-09 02:04:43 UTC (rev 313)
@@ -4,6 +4,8 @@
 - $null passed as a Java string now evaluates to null and not ""
 - sleep arrays will now $null elements when converting to Java
   arrays.
+- updated fork() to use script name AND line number information
+  for thread description.  will aid debugging.
 
 2.1-beta 19  (24 Oct 07)
 ===========



From rsmudge at mail.berlios.de  Fri Nov  9 07:41:24 2007
From: rsmudge at mail.berlios.de (rsmudge at BerliOS)
Date: Fri, 9 Nov 2007 07:41:24 +0100
Subject: [Sleep-svn] r314 - in sleep: . src/sleep/runtime tests tests/output
Message-ID: <200711090641.lA96fOX8020776@sheep.berlios.de>

Author: rsmudge
Date: 2007-11-09 07:41:23 +0100 (Fri, 09 Nov 2007)
New Revision: 314

Added:
   sleep/tests/output/wo.sl
   sleep/tests/wo.sl
Modified:
   sleep/src/sleep/runtime/CollectionWrapper.java
   sleep/src/sleep/runtime/MapWrapper.java
   sleep/whatsnew.txt
Log:
..


Modified: sleep/src/sleep/runtime/CollectionWrapper.java
===================================================================
--- sleep/src/sleep/runtime/CollectionWrapper.java	2007-11-09 02:04:43 UTC (rev 313)
+++ sleep/src/sleep/runtime/CollectionWrapper.java	2007-11-09 06:41:23 UTC (rev 314)
@@ -1,9 +1,10 @@
 package sleep.runtime;
 
 import java.util.*;
+import sleep.engine.ObjectUtilities;
 
-/** A read only scalar array for wrapping data structures that implement the java.util.Collection interface. Values wrapped 
-within this class will be converted to object scalars whenever accessed. */
+/** A read only scalar array for wrapping data structures that implement the java.util.Collection interface. 
+Values will be marshalled into Sleep scalars when accessed. */
 public class CollectionWrapper implements ScalarArray
 {
    protected Collection values;
@@ -21,17 +22,17 @@
 
    public Scalar pop()
    {
-      return SleepUtils.getEmptyScalar();
+      throw new RuntimeException("array is read-only");
    }
 
    public void sort(Comparator compare)
    {
-
+      throw new RuntimeException("array is read-only");
    }
 
    public Scalar push(Scalar value)
    {
-      return SleepUtils.getEmptyScalar();
+      throw new RuntimeException("array is read-only");
    }
 
    public int size()
@@ -41,7 +42,7 @@
 
    public Scalar remove(int index)
    {
-      return SleepUtils.getEmptyScalar();
+      throw new RuntimeException("array is read-only");
    }
 
    public Scalar getAt(int index)
@@ -51,12 +52,7 @@
          array = values.toArray();
       }
 
-      if (array[index] instanceof String)
-      {
-         return SleepUtils.getScalar((String)array[index]);
-      }
-
-      return SleepUtils.getScalar(array[index]);
+      return ObjectUtilities.BuildScalar(true, array[index]);
    }
 
    public Iterator scalarIterator()
@@ -66,11 +62,12 @@
 
    public Scalar add(Scalar value, int index)
    {
-      return SleepUtils.getEmptyScalar();
+      throw new RuntimeException("array is read-only");
    }
 
    public void remove(Scalar value)
    {
+      throw new RuntimeException("array is read-only");
       // do nothing
    }
 
@@ -91,17 +88,12 @@
       public Object next()
       {
          Object temp = realIterator.next();
- 
-         if (temp instanceof String)
-         {
-            return SleepUtils.getScalar((String)temp);
-         }
-
-         return SleepUtils.getScalar(temp);
+         return ObjectUtilities.BuildScalar(true, temp);
       }
 
       public void remove()
       {
+          throw new RuntimeException("array is read-only");
           // no dice
       }
    }

Modified: sleep/src/sleep/runtime/MapWrapper.java
===================================================================
--- sleep/src/sleep/runtime/MapWrapper.java	2007-11-09 02:04:43 UTC (rev 313)
+++ sleep/src/sleep/runtime/MapWrapper.java	2007-11-09 06:41:23 UTC (rev 314)
@@ -1,9 +1,10 @@
 package sleep.runtime;
 
 import java.util.*;
+import sleep.engine.ObjectUtilities;
 
 /** A class for creating accessing a Map data structure in your application in a ready only way.  It is assumed that your map 
-data structure uses strings for keys.  Accessed values will be returned as scalar strings */
+data structure uses strings for keys.  Accessed values will be marshalled into Sleep scalars */
 public class MapWrapper implements ScalarHash
 {
    protected Map values;
@@ -16,13 +17,7 @@
    public Scalar getAt(Scalar key)
    {
       Object o = values.get(key.getValue().toString());
-
-      if (o != null)
-      {
-         return SleepUtils.getScalar(o.toString());
-      }
-
-      return SleepUtils.getEmptyScalar();
+      return ObjectUtilities.BuildScalar(true, o);
    }
 
    /** this operation is kind of expensive... should be fixed up to take care of that */
@@ -33,7 +28,7 @@
 
    public void remove(Scalar key)
    {
-      // do nothing, we're not in the business of mucking with there data structures... eh
+      throw new RuntimeException("hash is read-only");
    }
 
    public String toString()

Added: sleep/tests/output/wo.sl
===================================================================
--- sleep/tests/output/wo.sl	2007-11-09 02:04:43 UTC (rev 313)
+++ sleep/tests/output/wo.sl	2007-11-09 06:41:23 UTC (rev 314)
@@ -0,0 +1 @@
+Warning: array is read-only at wo.sl:6

Added: sleep/tests/wo.sl
===================================================================
--- sleep/tests/wo.sl	2007-11-09 02:04:43 UTC (rev 313)
+++ sleep/tests/wo.sl	2007-11-09 06:41:23 UTC (rev 314)
@@ -0,0 +1,8 @@
+#
+# write-only array.
+#
+
+ at files = ls();
+pop(@files);
+
+println("test");

Modified: sleep/whatsnew.txt
===================================================================
--- sleep/whatsnew.txt	2007-11-09 02:04:43 UTC (rev 313)
+++ sleep/whatsnew.txt	2007-11-09 06:41:23 UTC (rev 314)
@@ -6,6 +6,10 @@
   arrays.
 - updated fork() to use script name AND line number information
   for thread description.  will aid debugging.
+- updated read-only array, hash wrappers to display a warning 
+  when a script attempts a modifying operation
+- updated array, hash wrappers to marshall wrapped types into
+  Sleep types as appropriate.
 
 2.1-beta 19  (24 Oct 07)
 ===========



From rsmudge at mail.berlios.de  Tue Nov 13 01:58:43 2007
From: rsmudge at mail.berlios.de (rsmudge at BerliOS)
Date: Tue, 13 Nov 2007 01:58:43 +0100
Subject: [Sleep-svn] r315 - in sleep: . src/sleep/runtime
Message-ID: <200711130058.lAD0whS7000905@sheep.berlios.de>

Author: rsmudge
Date: 2007-11-13 01:58:42 +0100 (Tue, 13 Nov 2007)
New Revision: 315

Modified:
   sleep/readme.txt
   sleep/src/sleep/runtime/SleepUtils.java
   sleep/whatsnew.txt
Log:
..


Modified: sleep/readme.txt
===================================================================
--- sleep/readme.txt	2007-11-09 06:41:23 UTC (rev 314)
+++ sleep/readme.txt	2007-11-13 00:58:42 UTC (rev 315)
@@ -1,5 +1,5 @@
  ------- -------------------- ---------   ---------------  ------- ---------
-Sleep - 2.1 beta 19 - README   
+Sleep - 2.1 beta 20 - README   
 -  ------------- -------- -   ---------------- --       -    -     -     - - -
 
 "You got the language, all you need now is the O'Reilly book".  That is

Modified: sleep/src/sleep/runtime/SleepUtils.java
===================================================================
--- sleep/src/sleep/runtime/SleepUtils.java	2007-11-09 06:41:23 UTC (rev 314)
+++ sleep/src/sleep/runtime/SleepUtils.java	2007-11-13 00:58:42 UTC (rev 315)
@@ -26,7 +26,7 @@
 public class SleepUtils
 {
    /** A date stamp of this Sleep release in YYYYMMDD format */
-   public static final int    SLEEP_RELEASE = 20071024;
+   public static final int    SLEEP_RELEASE = 20071112;
 
    /** A string description of this Sleep release */
    public static final String SLEEP_VERSION = "Sleep 2.1";

Modified: sleep/whatsnew.txt
===================================================================
--- sleep/whatsnew.txt	2007-11-09 06:41:23 UTC (rev 314)
+++ sleep/whatsnew.txt	2007-11-13 00:58:42 UTC (rev 315)
@@ -1,8 +1,8 @@
-2.1-beta 20
+2.1-beta 20  (12 Nov 07)
 ===========
 - fix debug mode 24 error handling inconsistency bug.
 - $null passed as a Java string now evaluates to null and not ""
-- sleep arrays will now $null elements when converting to Java
+- sleep arrays now allow $null elements when converting to Java
   arrays.
 - updated fork() to use script name AND line number information
   for thread description.  will aid debugging.



